<mvc:View controllerName="com.sap4kids.assistanceentry.controller.Registration"
	xmlns="sap.m"
	xmlns:l="sap.ui.layout"
	xmlns:f="sap.f"
	xmlns:form="sap.ui.layout.form"
	xmlns:core="sap.ui.core"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:gmaps="openui5.googlemaps">
	<f:ShellBar id="shell" title="{i18n>pageHeaderTitle}" homeIcon="img/logo.png">
		<f:additionalContent >
			<Button type="Transparent" text="{i18n>about}" press=".onAboutOpen" />
			<Button type="Transparent" text="{i18n>legal}" press=".onDisclaimerOpen" />
			<Button type="Transparent" text="{i18n>faq}" press=".onFAQOpen" />
			<Button type="Transparent" icon="sap-icon://log" press=".onLogout" />
			<!--<Button type="Transparent" text="{i18n>feedback}" press=".onFeedbackOpen" />-->
		</f:additionalContent>
	</f:ShellBar>
	<Page id="page" showHeader="false">
		<content>
			<Image visible="{=!${device>/system/phone}}" src="img/header.jpg" width="100%" height="200px" mode="Background" densityAware="false" backgroundSize="cover" backgroundPosition="center"/>
			<Text text="{i18n>pageHeaderDescription}" class="headerText"/>
			<Wizard id="wizard" finishButtonText="{i18n>submitButtonText}" class="sapUiResponsivePadding--header sapUiResponsivePadding--content" complete=".wizardCompleted">
				<WizardStep id="Step1" title="{i18n>wizardStep1}" validated="true" complete=".validateStep1">
					<MessageStrip id="successStrip" visible="false" type="Success" showIcon="true" showCloseButton="true"/>
					<form:Form editable="true">
						<form:title>
							<core:Title text="{i18n>organizationType}"/>
						</form:title>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement id="organizationElement" label="{i18n>organizationType}">
										<form:fields>
											<ComboBox id="organizationType" items="{
													path: 'backend>/OrganizationTypes'
												}" value="{/organizationType}" valueStateText="{i18n>validationErrorGenericInputMissing}" selectedKey="SchoolDistrict" required="true" change=".onChangeOrganizationType" selectionChange=".onChangeOrganizationType" busyIndicatorDelay="{view>/busyDelay}">
												<core:Item key="{backend>code}" text="{backend>name}"/>
											</ComboBox>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
					<form:Form editable="true" id="schoolForm">
						<form:title>
							<core:Title text="{i18n>stateAndCounty}"/>
						</form:title>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement id="stateElement" label="{i18n>state}">
										<form:fields>
											<ComboBox id="state" items="{
													path: 'backend>/States',
													sorter: {path: 'StateCode'}
												}" value="{/state}" valueStateText="{i18n>validationErrorGenericInputMissing}" required="true" change=".onChangeState" selectionChange=".onChangeState" busyIndicatorDelay="{view>/busyDelay}">
												<core:Item key="{backend>StateCode}" text="{backend>StateCode} {path: 'backend>Name', formatter: '.formatter.titleCase'}"/>
											</ComboBox>
										</form:fields>
									</form:FormElement>
									<form:FormElement id="districtElement" label="{i18n>district}">
										<form:fields>
											<ComboBox id="district" enabled="false" items="{backend>}" value="{/district}" valueStateText="{i18n>validationErrorGenericInputMissing}" required="true" busy="{view>/districtBusy}" busyIndicatorDelay="{view>/busyDelay}" change=".onChangeDistrict" selectionChange=".onChangeDistrict">
												<core:Item key="{
														path: 'backend>leaid',
														type: 'sap.ui.model.type.Float',
														formatOptions: {
															groupingSeparator: ''
														}
													}" text="{path: 'backend>name', formatter: '.formatter.titleCase'}"/>
											</ComboBox>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>associationToSchool}">
										<form:fields>
											<l:FixFlex vertical="false" fixFirst="false" class="associationToSchoolHelpFixFlex">
												<l:fixContent>
													<Button type="Transparent" icon="sap-icon://sys-help" press=".onAssociationToSchoolInfo" class="helpIcon"/>
												</l:fixContent>
												<l:flexContent>
													<CheckBox id="associationToSchool" class="associationToSchoolCheckbox" text="{i18n>associationToSchoolCheckBox}" selected="true" select=".onAssociatedToSchool"/>
												</l:flexContent>
											</l:FixFlex>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
					<form:Form editable="true">
						<form:toolbar>
							<Toolbar>
								<Title text="{i18n>schoolAndAddress}"/>
								<Button icon="sap-icon://sys-help" press=".onSchoolInfo"/>
							</Toolbar>
						</form:toolbar>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement id="schoolElement" label="{i18n>school}">
										<form:fields>
											<l:VerticalLayout width="100%">
												<ComboBox id="school" width="100%" enabled="false" items="{backend>}" value="{/school}" required="true" valueStateText="{i18n>validationErrorGenericInputMissing}" change=".onChangeSchool" selectionChange=".onChangeSchool" busy="{view>/schoolBusy}" busyIndicatorDelay="{view>/busyDelay}">
													<core:Item key="{
															path: 'backend>ID',
															type: 'sap.ui.model.type.Float',
															formatOptions: {
																groupingSeparator: ''
															}
														}" text="{path: 'backend>name', formatter: '.formatter.titleCase'}"/>
													<customData>
														<core:CustomData key="address_ID" value="{backend>address_ID}"/>
													</customData>
												</ComboBox>
												<MessageStrip id="entriesExistStrip" class="entriesExistStrip" visible="false" type="Warning" showIcon="true" showCloseButton="true">
													<link>
														<Link text="{i18n>resourceLocatorLink}" target="_blank" href="/comsap4kidsresourcelocator/index.html"/>
													</link>
												</MessageStrip>
											</l:VerticalLayout>
										</form:fields>
									</form:FormElement>
									<form:FormElement visible="false" id="locationNameElement" label="{i18n>locationName}">
										<form:fields>
											<l:VerticalLayout width="100%">
												<Input id="locationName" value="{/locationName}" editable="false" change=".onChangeLocationName" valueStateText="{i18n>validationErrorGenericInputMissing}" required="true"/>
												<MessageStrip id="locationExistStrip" class="entriesExistStrip" visible="false" type="Warning" showIcon="true" showCloseButton="true">
													<link>
														<Link text="{i18n>resourceLocatorLink}" target="_blank" href="/comsap4kidsresourcelocator/index.html"/>
													</link>
												</MessageStrip>
											</l:VerticalLayout>
										</form:fields>
									</form:FormElement>
									<form:FormElement visible="false" id="locationTypeElement" label="{i18n>locationType}">
										<form:fields>
											<Select id="locationType" items="{
													path: 'backend>/LocationTypes',
													sorter: {path: 'locType'}
												}" selectedKey="{/locationTypeKey}" forceSelection="true" required="true">
												<core:Item key="{backend>ID}" text="{backend>locType}"/>
											</Select>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>address}">
										<form:fields>
											<Input id="address" value="{/address}" valueStateText="{i18n>validationErrorAddress}" change=".onChangeAddress" editable="false"/>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
					<gmaps:Map id="map" visible="false" height="250px" zoom="15" lat="{view>/lat}" lng="{view>/lng}" apiKey="{keys>/gmaps}" markers="{view>/markers}" class="sapUiSmallMarginBottom">
						<gmaps:markers>
							<gmaps:Marker lat="{view>lat}" lng="{view>lng}" info="{view>info}" icon="{view>icon}"/>
						</gmaps:markers>
					</gmaps:Map>
				</WizardStep>
				<WizardStep id="Step2" title="{i18n>wizardStep2}" validated="true" complete=".validateStep2">
					<form:Form editable="true">
						<form:toolbar>
							<Toolbar>
								<Title text="{i18n>serviceContact}"/>
								<Button icon="sap-icon://sys-help" press=".onContactInfo"/>
							</Toolbar>
						</form:toolbar>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement label="{i18n>name}">
										<form:fields>
											<Input id="contactName" enabled="true" required="false" value="{path: '/name', type: 'sap.ui.model.type.String'}" valueStateText="{i18n>validationErrorGenericInputMissing}" change=".onChangeContactName" maxLength="100"/>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>title}">
										<form:fields>
											<Input id="contactTitle" enabled="true" required="false" value="{path: '/title', type: 'sap.ui.model.type.String'}" maxLength="100"/>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>email}">
										<form:fields>
											<Input id="contactEmail" enabled="true" required="false" type="Email" valueStateText="E-Mail must be a valid email address." value="{
													path : '/email',
													type : '.types.email'
												}" change=".onChangeContactEmail" maxLength="100"/>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>phone}">
										<form:fields>
											<Input id="contactPhone" enabled="true" value="{/phone}" maxLength="100"/>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
				</WizardStep>
				<WizardStep id="Step3" title="{i18n>wizardStep3}" validated="true" complete=".validateStep3">
					<form:Form editable="true">
						<form:toolbar>
							<Toolbar>
								<Title text="{i18n>assistanceHeader}"/>
							</Toolbar>
						</form:toolbar>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement label="{i18n>assistance}">
										<form:fields>
											<Select id="assistanceType" forceSelection="true" selectedKey="11605ca6-3326-4b3f-9722-89ea1bf770a7" required="true" change=".onSelectAssistanceType" valueStateText="{i18n>validationErrorGenericInputMissing}" items="{
													path: 'backend>/AssistanceTypes',
													sorter: {path: 'assistanceType'}
												}">
												<core:ListItem key="{backend>ID}" text="{backend>assistanceType}" icon="sap-icon://{path: 'backend>assistanceType', formatter: '.formatter.assistanceIcon'}"/>
											</Select>
										</form:fields>
									</form:FormElement>
									<form:FormElement id="assistanceSubTypeElement" label="{i18n>assistanceSubtypeFood}">
										<form:fields>
											<MultiComboBox id="assistanceSubType" selectionChange=".onFoodSelectionChange" valueStateText="{i18n>validationErrorGenericInputMissing}" items="{
													path: 'backend>/AssistanceSubTypes'
												}" required="true">
												<core:Item key="{backend>ID}" text="{backend>subType}"/>
											</MultiComboBox>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>serviceEntitlement}">
										<form:fields>
											<Select id="serviceEntitlement" forceSelection="true" selectedKey="{/eligibilityKey}" required="true" valueStateText="{i18n>validationErrorGenericInputMissing}" items="{
													path: 'backend>/EligiblityCategories',
													sorter: {path: 'eligibilityCategory'}
												}">
												<core:ListItem key="{backend>ID}" text="{backend>eligibilityCategory}"/>
											</Select>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>serviceType}">
										<form:fields>
											<VBox>
												<CheckBox id="pickup" text="{i18n>assistancePickup}" selected="{/pickup}"/>
												<CheckBox id="delivery" text="{i18n>assistanceDelivery}" selected="{/delivery}"/>
												<CheckBox visible="true" id="virtual" text="{i18n>assistanceVirtual}" selected="{/virtual}"/>
											</VBox>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>additionalInformation}">
										<form:fields>
											<l:FixFlex vertical="false" fixFirst="false" class="assistanceHelpFixFlex">
												<l:fixContent>
													<Button type="Transparent" icon="sap-icon://sys-help" press=".onAssistanceInfo" class="helpIcon"/>
												</l:fixContent>
												<l:flexContent>
													<TextArea value="{/additionalInformation}" width="100%"/>
												</l:flexContent>
											</l:FixFlex>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>webAddress}">
										<form:fields>
											<Input id="webAddress" value="{
													path : '/webAddress',
													type : '.types.url'
												}" change=".onChangeWebAddress" maxLength="200"/>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
					<form:Form id="scheduleForm" visible="false" editable="true" formContainers="{
							path: '/selectedTypes',
							sorter: {path: 'sort'}
						}">
						<form:title>
							<core:Title text="{i18n>scheduleHeader}"/>
						</form:title>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="3" columnsL="3" columnsM="3" singleContainerFullSize="false"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer title="{subType}">
								<form:formElements>
									<form:FormElement label="{i18n>schedule}">
										<form:fields>
											<VBox>
												<CheckBox select=".onSelectDay" text="Monday" selected="{monday}"/>
												<CheckBox select=".onSelectDay" text="Tuesday" selected="{tuesday}"/>
												<CheckBox select=".onSelectDay" text="Wednesday" selected="{wednesday}"/>
												<CheckBox select=".onSelectDay" text="Thursday" selected="{thursday}"/>
												<CheckBox select=".onSelectDay" text="Friday" selected="{friday}"/>
												<CheckBox select=".onSelectDay" text="Saturday" selected="{saturday}"/>
												<CheckBox select=".onSelectDay" text="Sunday" selected="{sunday}"/>
											</VBox>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>timerangeFrom}">
										<form:fields>
											<TimePicker id="timerangeFrom" value="{timerangeFrom}" valueFormat="hh:mm a" displayFormat="hh:mm a" change=".onSelectFromTime" minutesStep="15" valueStateText="{i18n>validationErrorGenericInputMissing}" placeholder="{i18n>timerangeFromPlaceholder}" required="true"/>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>timerangeTo}">
										<form:fields>
											<TimePicker id="timerangeTo" value="{timerangeTo}" valueFormat="hh:mm a" displayFormat="hh:mm a" change=".onSelectToTime" minutesStep="15" valueStateText="{i18n>validationErrorGenericInputMissing}" placeholder="{i18n>timerangeToPlaceholder}" required="true"/>
										</form:fields>
									</form:FormElement>
									<form:FormElement label="{i18n>dateRange}">
										<form:fields>
											<DateRangeSelection id="daterange" dateValue="{dateFrom}" secondDateValue="{dateTo}" valueStateText="{i18n>validationErrorDateRangeTo}" showFooter="true" change=".onSelectDateRange"/>
										</form:fields>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>

					<form:Form editable="true">
						<form:title>
							<core:Title text="{i18n>reCaptchaFormTitle}"/>
						</form:title>
						<form:layout>
							<form:ResponsiveGridLayout labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="3" emptySpanL="3" emptySpanM="1" emptySpanS="0" columnsXL="1" columnsL="1" columnsM="1" singleContainerFullSize="true"/>
						</form:layout>
						<form:formContainers>
							<form:FormContainer>
								<form:formElements>
									<form:FormElement label="{i18n>reCaptcha}">
										<l:VerticalLayout>
											<FlexBox height="85px" alignItems="Center">
												<items>
													<core:HTML id="reCaptcha" preferDOM="true" content='&lt;div id=&quot;recaptcha&quot; class=&quot;g-recaptcha&quot; data-expired-callback=&quot;captchaExpired&quot; data-callback=&quot;validateMandatoryFields&quot; style=&quot;margin-top:40px;margin-bottom:40px;&quot; &gt;&lt;/div&gt;'>
													</core:HTML>
												</items>
											</FlexBox>
											<Label id="captchaValidationErrorMessage" visible="false" text="{i18n>captchaError}" class="validationErrorMessage sapMValueStateMessage"/>
										</l:VerticalLayout>
									</form:FormElement>
								</form:formElements>
							</form:FormContainer>
						</form:formContainers>
					</form:Form>
				</WizardStep>
			</Wizard>
		</content>

		<dependents>
			<Dialog id="disclaimer" title="{i18n>legal}" contentWidth="600px" type="Message">
				<content >
					<Text text="{i18n>disclaimerText}"/>
				</content>
				<buttons >
					<Button text="{i18n>print}" press=".onPrintLegal"/>
					<Button text="{i18n>close}" press=".onCloseDialog"/>
				</buttons>
			</Dialog>
			<Dialog id="about" title="{i18n>about}" contentWidth="600px" type="Message">
				<content >
					<Text text="{i18n>aboutText}"/>
				</content>
				<buttons >
					<Button text="{i18n>close}" press=".onCloseDialog"/>
				</buttons>
			</Dialog>
			<Dialog id="faq" title="{i18n>faqTitle}" contentWidth="600px" type="Message">
				<content >
					<FormattedText htmlText="{i18n>faqText}"/>
				</content>
				<buttons >
					<Button text="{i18n>close}" press=".onCloseDialog"/>
				</buttons>
			</Dialog>
			<!--<Popover id="profile" title="Some User" contentWidth="400px" placement="Bottom">
				<List> <StandardListItem icon="sap-icon://log" title="Sign Out"/>
				</List>
			</Popover>-->
			<Popover id="schoolInfo" title="{i18n>helpHeader}" contentWidth="400px" class="sapUiPopupWithPadding" placement="Bottom">
				<Text text="{i18n>helpAssistance}"/>
			</Popover>
			<Popover id="onAssociationToSchoolInfo" title="{i18n>helpHeader}" contentWidth="400px" class="sapUiPopupWithPadding" placement="Bottom">
				<Text text="{i18n>helpAssociationToSchoolInfo}"/>
			</Popover>
			<Popover id="assistanceInfo" title="{i18n>helpHeader}" contentWidth="400px" class="sapUiPopupWithPadding" placement="Bottom">
				<Text text="{i18n>helpFurtherInformation}"/>
			</Popover>
			<Popover id="contactInfo" title="{i18n>helpHeader}" contentWidth="400px" class="sapUiPopupWithPadding" placement="Bottom">
				<Text text="{i18n>helpContactPerson}"/>
			</Popover>
			<Popover id="validationInfo" title="{i18n>validationErrorPopoverInfoHeader}" contentWidth="250px" class="sapUiPopupWithPadding" placement="Top">
				<customHeader>
					<Bar>
						<contentLeft>
							<Label design="Bold" text="{i18n>validationErrorPopoverInfoHeader}"></Label>
						</contentLeft>
					</Bar>
				</customHeader>
				<Text text="{i18n>validationErrorPopoverInfoMessage}"/>
			</Popover>
		</dependents>
	</Page>
</mvc:View>
